apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/secure-backends: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    #nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{ .Values.ingress.apphostName }}, https://{{ .Values.ingress.mgmthostName }}"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: webapp-ingress
  namespace: {{ .Values.nameSpace }}
spec:
  rules:
    - host: {{ .Values.ingress.apphostName }}
      http:
        paths:
          - backend:
              service:
                name: io
                port:
                  number: 8443
            path: /()(socket.io.*)
            pathType: ImplementationSpecific
          - backend:
              service:
                name: client
                port:
                  number: 80
            path: /()(.*)
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - '{{ .Values.ingress.certHost }}'
      secretName: {{ .Values.ingress.tlsSecret }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/secure-backends: "false"
  name: edumeet-ingress
  namespace: {{ .Values.nameSpace }}
spec:
  rules:
    - host: {{ .Values.ingress.mgmthostName }}
      http:
        paths:
          - backend:
              service:
                name: mgmt
                port:
                  number: 3030
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - '{{ .Values.ingress.mgmtCertHost }}'
      secretName: {{ .Values.ingress.mgmtTlsSecret }}

